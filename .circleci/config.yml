version: 2.1
jobs:
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run: echo $GCP_PROJECT_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json --project $GOOGLE_PROJECT_ID
      - run: gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: gcloud container clusters get-credentials $CLUSTER_NAME
      - run: gcloud builds submit --config=cloudbuild.yaml
      - run: TAG=latest REPO_PREFIX=gcr.io/hipstershop-264010 ./hack/make-release-artifacts.sh
      - run: cat release/kubernetes-manifests.yaml
      - run: kubectl apply -f release/kubernetes-manifests.yaml
workflows:
  version: 2.1
  main:
    jobs:
      - deploy



          # kubectl create secret docker-registry gcr-access-token --docker-server=gcr.io --docker-username=oauth3accesstoken --docker-password="$(gcloud auth print-access-token)" --docker-email=any@valid.email
          # kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "gcr-access-token"}]}'
      # kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2
# kubectl create secret docker-registry gcr-json-key --docker-server=gcr.io --docker-username=_json_key --docker-password="$(cat ../../../Desktop/hs.json)" --docker-email=any@valid.email
# kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "gcr-json-key"}]}'